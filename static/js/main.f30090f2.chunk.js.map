{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","sortBy","isReversed","reverseArray","isReset","resetVisible","visibleGoods","goods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAgB,WAC3B,MAA2BC,mBAASH,EAASI,MAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAmCH,oBAAS,GAA5C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAgBC,EAAhB,KAEMC,EAtCD,SACLC,EADK,GAGJ,IADCP,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOC,GAEzB,OAAQP,GACN,KAAKL,EAASI,KACZ,MAEF,KAAKJ,EAASa,SACZF,EAAaG,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAExC,MAEF,KAAKhB,EAASkB,OACZP,EAAaG,MACX,SAACC,EAAOC,GAAR,OAAmBD,EAAMI,OAASH,EAAMG,UAY9C,OAJIZ,GACFI,EAAaS,UAGRT,EASHU,CAAkBpB,EAAiB,CAAEI,WAAUE,eAEnD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACYjB,IAAaL,EAASa,SAAY,GAAK,YAE5DW,QAAS,WACPlB,EAAON,EAASa,UAChBH,GAAa,IAPjB,iCAaA,wBACEa,KAAK,SACLD,UAAS,4BACejB,IAAaL,EAASkB,OAAU,GAAK,YAE7DM,QAAS,WACPlB,EAAON,EAASkB,QAChBR,GAAa,IAPjB,4BAaA,wBACEa,KAAK,SACLD,UAAS,4BACef,EAAc,GAAK,YAE3CiB,QAAS,WACPhB,GAAcD,GACdG,GAAcH,GAAcF,IAAaL,EAASI,OAPtD,qBAaCK,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPhB,GAAa,GACbE,GAAa,GACbJ,EAAON,EAASI,OANpB,sBAcJ,6BACGO,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f30090f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.NONE:\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (good1, good2) => (good1.length - good2.length),\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortBy] = useState(SortType.NONE);\n  const [isReversed, reverseArray] = useState(false);\n  const [isReset, resetVisible] = useState(false);\n\n  const visibleGoods\n    = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            `button is-info ${(sortType === SortType.ALPHABET) ? '' : 'is-light'}`\n          }\n          onClick={() => {\n            sortBy(SortType.ALPHABET);\n            resetVisible(true);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-success ${(sortType === SortType.LENGTH) ? '' : 'is-light'}`\n          }\n          onClick={() => {\n            sortBy(SortType.LENGTH);\n            resetVisible(true);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            `button is-warning ${(isReversed) ? '' : 'is-light'}`\n          }\n          onClick={() => {\n            reverseArray(!isReversed);\n            resetVisible(!isReversed || sortType !== SortType.NONE);\n          }}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              reverseArray(false);\n              resetVisible(false);\n              sortBy(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}